basePath: /api
definitions:
  authentication.Login:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  authentication.VerifyMfaPayload:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  postgres.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      image:
        type: string
      mfaEnabled:
        type: boolean
      mfaVerified:
        type: boolean
      name:
        type: string
      role:
        type: string
      updatedAt:
        type: string
    required:
    - email
    - name
    - role
    type: object
host: localhost:6173
info:
  contact:
    email: connor.davis@thusa.co.za
    name: Connor Davis
    url: https://thusa.co.za
  description: This is the ZingFibre Reports Portal API built with Fiber
  title: ZingFibre Reports Portal API
  version: 1.0.0
paths:
  /authentication/check:
    get:
      consumes:
      - application/json
      description: Check if user is authenticated
      produces:
      - application/json
      responses:
        "200":
          description: User object
          schema:
            $ref: '#/definitions/postgres.User'
      summary: Check
      tags:
      - Authentication
  /authentication/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user
      parameters:
      - description: Login payload.
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/authentication.Login'
      produces:
      - application/json
      responses:
        "200":
          description: Authenticated.
          schema:
            type: string
        "400":
          description: Invalid request body.
          schema:
            type: string
        "401":
          description: Unauthorized.
          schema:
            type: string
        "500":
          description: Internal Server Error.
          schema:
            type: string
      summary: Authenticate User
      tags:
      - Authentication
  /authentication/mfa/disable:
    patch:
      consumes:
      - application/json
      description: Disable MFA for the current user.
      parameters:
      - description: User ID
        in: query
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Invalid query parameters.
          schema:
            type: string
        "401":
          description: Unauthorized.
          schema:
            type: string
        "403":
          description: Forbidden.
          schema:
            type: string
        "404":
          description: The user was not found.
          schema:
            type: string
      summary: Disable
      tags:
      - Authentication
  /authentication/mfa/enable:
    get:
      consumes:
      - application/json
      description: Enable MFA for the current user.
      produces:
      - image/png
      responses:
        "200":
          description: QR Code
          schema:
            type: file
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Enable
      tags:
      - Authentication
  /authentication/mfa/verify:
    post:
      consumes:
      - application/json
      description: Verify MFA for the current user.
      parameters:
      - description: Verify MFA Payload.
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/authentication.VerifyMfaPayload'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Invalid MFA code.
          schema:
            type: string
        "500":
          description: Internal Server Error.
          schema:
            type: string
      summary: Verify
      tags:
      - Authentication
  /users:
    get:
      consumes:
      - application/json
      description: View all users.
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/postgres.User'
            type: array
        "400":
          description: Invalid query parameters.
          schema:
            type: string
        "401":
          description: Unauthorized.
          schema:
            type: string
        "500":
          description: Internal Server Error.
          schema:
            type: string
      summary: View All
      tags:
      - Users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: View a user by id.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/postgres.User'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: The user was not found.
          schema:
            type: string
        "500":
          description: Internal Server Error.
          schema:
            type: string
      summary: View
      tags:
      - Users
swagger: "2.0"
